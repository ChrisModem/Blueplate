/**
 * SASS File: 		blueplate.sass
 * Author:        	Chris Humboldt
 * Link:			http://getwebplate.com/plugins/blueplate
 * Last Edited:   	2 January 2014
 * Edited By:		Chris Humboldt
 */

// Table of Contents:
// ---------------------------------------------------------------------------------------

// Variables
// Mixins
// Global
// Large View
// Fluid View
// Small View


// Variables
// ---------------------------------------------------------------------------------------
$column_limit						: 12;
$spacing_limit						: 10;
$limit_width						: 1100px;


// Mixins
// ---------------------------------------------------------------------------------------
@mixin row() {
	width: 100%;
	
	&:before, &:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}
@mixin make-span($span, $span_column_limit: $column_limit) {
	width: percentage($span / $column_limit);
}
@mixin span($span, $span_column_limit: $column_limit) {
	float: left;
	position: relative;
	width: percentage($span / $column_limit);
}
@mixin offset($off_by, $span_column_limit: $column_limit) {
	margin-left: percentage($off_by / $column_limit);
}
@mixin offset-r($off_by, $span_column_limit: $column_limit) {
	margin-right: percentage($off_by / $column_limit);
}
@mixin hide-it() {
	display: none;
}
@mixin show-it() {
	display: block;
}
@mixin limit-it() {
	width: $limit_width;
	margin: 0px auto;
	
	@media screen and (max-width: $limit_width) {
		width: 100%;
	}
}


// Global
// ---------------------------------------------------------------------------------------
// Display classes
.show-it {
	display: block;
}
.hide-it {
	display: none;
}
.fade-out-25, .fade-in-75 {
	opacity: 0.75;
}
.fade-out-50, .fade-in-50 {
	opacity: 0.5;
}
.fade-out-75, .fade-in-25 {
	opacity: 0.25;
}
.fade-out-100, .fade-in-0 {
	opacity: 0;
}
.hide-text {
	text-indent: -10000px;
	overflow: hidden;
}

// Position classes
.pos-absolute {
	position: absolute;
}
.pos-relative {
	position: relative;
}
.pos-static {
	position: static;
}
.pos-fixed {
	position: fixed;
}

// Alignment classes
.float-no {
	float: none;
}
.float-l {
	float: left;
}
.float-r {
	float: right;
}
.float-clear {
	clear: both;
}
.txt-l {
	text-align: left;	
}
.txt-r {
	text-align: right;	
}
.txt-c {
	text-align: center;
}
.center-it {
	margin: 0px auto;
}

// Text classes
.txt-size-xxl {
	font-size: 1.444em
}
.txt-size-xl {
	font-size: 1.222em
}
.txt-size-l {
	font-size: 1.111em
}
.txt-size-n {
	font-size: 1em;
}
.txt-size-m {
	font-size: 0.889em;
}
.txt-size-s {
	font-size: 0.778em;
}
.txt-size-xs {
	font-size: 0.667em
}
.txt-weight-xb {
	font-weight: 900;
}
.txt-weight-b, .txt-bold {
	font-weight: 700;
}
.txt-weight-n {
	font-weight: 400;
}
.txt-weight-l, .txt-light {
	font-weight: 300;
}
.txt-weight-xl {
	font-weight: 100;
}
.txt-normal {
	font-weight: 400;
	font-style: normal;
}
.txt-italics {
	font-style: italic;
}
.txt-oblique {
	font-style: oblique;
}
.txt-white {
	color: #fff;
}

// Vertical classes
.valign-t {
	vertical-align: top;
}
.valign-b {
	vertical-align: bottom;
}

// Background classes
.back-pos-l {
	background-position: left;
}
.back-pos-r {
	background-position: right;
}
.back-pos-t {
	background-position: top;
}
.back-pos-b {
	background-position: bottom;
}
.back-pos-c {
	background-position: center;
}
.back-repeat-no {
	background-repeat: no-repeat;
}
.back-repeat-y {
	background-repeat: repeat-y;
}
.back-repeat-x {
	background-repeat: repeat-x;
}
.back-single {
	background-position: center;
	background-repeat: no-repeat;
}
.back-cover {
	background-repeat: no-repeat;
	background-size: cover;
	background-position: center;
}
.back-black {
	background-color: #000;
}
.back-grey {
	background-color: lighten(#000, 50%);
}
.back-light-grey {
	background-color: lighten(#000, 90%);
}
.back-white {
	background-color: #fff;
}

// General layout
// For basic shapes
.block-h-10 {
	height: 10px;
}
.block-h-20 {
	height: 20px;
}
.block-h-50 {
	height: 50px;
}
.block-h-100 {
	height: 100px;
}
.block-h-200 {
	height: 200px;
}
.block-h-350 {
	height: 350px;
}
.block-h-500 {
	height: 500px;
}
.block-h-1000 {
	height: 1000px;
}
.block-h-10 {
	width: 10px;
}
.block-w-20 {
	width: 20px;
}
.block-w-50 {
	width: 50px;
}
.block-w-100 {
	width: 100px;
}
.block-w-200 {
	width: 200px;
}
.block-w-350 {
	width: 350px;
}
.block-w-500 {
	width: 500px;
}
.block-w-1000 {
	width: 1000px;
}

// Responsive layout
.row:before, .row:after {
	content: " ";
	display: table;
}
.row:after {
	clear: both;
}
.row {
	width: 100%;

	.row {
		width: auto;
	}
	[class *= "span-"] {
		float: left;
		position: relative;
	}
	
	// Span loop
	@for $index from 1 through $column_limit {
		
		.span-#{$index} {
			@include make-span($index);
		}
	}
	
	// Offset loop
	@for $index from 1 through ($column_limit - 1) {
		
		.off-#{$index} {
			@include offset($index);
		}
		.off-r-#{$index} {
			@include offset-r($index);
		}
	}
}
.limit-it {
	@include limit-it();
}

// Spacing classes
.spacing-no {
	padding: 0px;
	margin: 0px;
}
.pad-no {
	padding: 0px;
}
.mgn-no {
	margin: 0px;
}

// Multiples of 1 from 1 to 20
@for $index from 1 through $spacing_limit {
	
	$multiplication		: 1px;
	$class_name			: ($index * 1);
	
	// Padding
	.pad-#{$class_name} {
		padding: ($multiplication * $index);
	}
	.pad-r-#{$class_name} {
		padding-right: ($multiplication * $index);
	}
	.pad-l-#{$class_name} {
		padding-left: ($multiplication * $index);
	}
	.pad-t-#{$class_name} {
		padding-top: ($multiplication * $index);
	}
	.pad-b-#{$class_name} {
		padding-bottom: ($multiplication * $index);
	}
	
	// Margin
	.mgn-#{$class_name} {
		margin: ($multiplication * $index);
	}
	.mgn-r-#{$class_name} {
		margin-right: ($multiplication * $index);
	}
	.mgn-l-#{$class_name} {
		margin-left: ($multiplication * $index);
	}
	.mgn-t-#{$class_name} {
		margin-top: ($multiplication * $index);
	}
	.mgn-b-#{$class_name} {
		margin-bottom: ($multiplication * $index);
	}
}

// Colour classes
.txt-grey {
  color: fadeout(#000, 50%);
}


// Large View (Desktop and iPad)
// ---------------------------------------------------------------------------------------
@media screen and (min-width: 701px) {

	.small-show {
		display: none;
	}

	// Navigation
	.navigation ul, ol {
		list-style: none;
	}
}


// Fluid View (Desktop and iPad)
// ---------------------------------------------------------------------------------------
@media screen and (max-width: $limit_width) {
}


// Small View (iPhone)
// ---------------------------------------------------------------------------------------
@media screen and (-webkit-min-device-pixel-ratio: 3.0) and (max-width: 1080px), screen and (max-width: 700px) {

	// Text classes
	.small-txt-size-xxl {
		font-size: 1.444em
	}
	.small-txt-size-xl {
		font-size: 1.222em
	}
	.small-txt-size-l {
		font-size: 1.111em
	}
	.small-txt-size-n {
		font-size: 1em;
	}
	.small-txt-size-m {
		font-size: 0.889em;
	}
	.small-txt-size-s {
		font-size: 0.778em;
	}
	.small-txt-size-xs {
		font-size: 0.667em
	}
	.small-txt-weight-xb {
		font-weight: 900;
	}
	.small-txt-weight-b, .small-txt-bold {
		font-weight: 700;
	}
	.small-txt-weight-n {
		font-weight: 400;
	}
	.small-txt-weight-l, .small-txt-light {
		font-weight: 300;
	}
	.small-txt-weight-xl {
		font-weight: 100;
	}
	.small-txt-normal {
		font-weight: 400;
		font-style: normal;
	}

	// General layout
	.small-hide {
		display: none;
	}
	
	// Responive layout
	.row {
		[class *= "span-"] {
			display: block;
			position: relative;
			float: left;
			width: 100%;
			
			.small-hide {
				display: none;
			}
		}
		[class *= "off-"] {
			margin-left: 0%;
		}
		[class *= "off-r-"] {
			margin-right: 0%;
		}
	
		// Small span loop
		@for $index from 1 through $column_limit {
		
			.small-span-#{$index} {
				@include make-span($index);
			}
		}
	
		// Offset loop
		@for $index from 1 through ($column_limit - 1) {
		
			.small-off-#{$index} {
				@include offset($index);
			}
			.small-off-r-#{$index} {
				@include offset-r($index);
			}
		}
	}
}